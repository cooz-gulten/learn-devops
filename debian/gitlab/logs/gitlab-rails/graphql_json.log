# Logfile created on 2023-02-23 07:58:18 +0000 by logger.rb/v1.4.2
{"severity":"INFO","time":"2023-02-23T07:58:18.086Z","correlation_id":"01GSYMFE443S3AEE2DRPHHQYWA","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/CBpjjvW8c6Rg8UWZdDAa3qkrnkIj8Qoq2Y-MZp5mzm0=","duration_s":0.0080057349996423,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"172.23.0.1","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.009447346999877482,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-02-23T07:58:18.089Z","correlation_id":"01GSYMFE443S3AEE2DRPHHQYWA","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/iW2iXm1LyOngsRspT5bI1gP0U6yii_BIhzQkzu1M964=","duration_s":0.0009313059999840334,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"172.23.0.1","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.009447346999877482,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-02-23T07:58:18.140Z","correlation_id":"01GSYMFDS816AZHBFNHZ561PQB","trace_type":"execute_query","query_fingerprint":"pathLastCommit/A76CS_Lr2wc3swMokIjsFgxxi0F0m64vhTXxiqc5XbA=/3/IglJZFvwlGudb3_wlr20zbdf9BKH8ktLLzpQO-zIPsE=","duration_s":0.0008080540001174086,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/A76CS_Lr2wc3swMokIjsFgxxi0F0m64vhTXxiqc5XbA=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signatureHtml\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"172.23.0.1","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.00834433700038062,"query_analysis.depth":10,"query_analysis.complexity":65,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","Commit.signatureHtml","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-02-23T07:59:14.992Z","correlation_id":"01GSYMH5W097B32WMP9ZNC81S6","trace_type":"execute_query","query_fingerprint":"pathLastCommit/A76CS_Lr2wc3swMokIjsFgxxi0F0m64vhTXxiqc5XbA=/3/IglJZFvwlGudb3_wlr20zbdf9BKH8ktLLzpQO-zIPsE=","duration_s":0.0037933869998596492,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/A76CS_Lr2wc3swMokIjsFgxxi0F0m64vhTXxiqc5XbA=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signatureHtml\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"172.23.0.1","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.03276307200030715,"query_analysis.depth":10,"query_analysis.complexity":65,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","Commit.signatureHtml","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-02-23T07:59:15.285Z","correlation_id":"01GSYMH5W097B32WMPA0M1JF06","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/CBpjjvW8c6Rg8UWZdDAa3qkrnkIj8Qoq2Y-MZp5mzm0=","duration_s":0.0029165719997763517,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"172.23.0.1","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.0028659050003625453,"query_analysis.depth":3,"query_analysis.complexity":8,"query_analysis.used_fields":["Project.id","Project.__typename","ProjectPermissions.__typename","ProjectPermissions.pushCode","ProjectPermissions.forkProject","ProjectPermissions.createMergeRequestIn","Project.userPermissions","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-02-23T07:59:15.317Z","correlation_id":"01GSYMH5W5TQGANCPX698HK154","trace_type":"execute_query","query_fingerprint":"getFiles/PLi0KzTEtAGiCx2G-KuCbPyg-JXcH08Mcb-IBFMb0gw=/5/TLzFwUWohvr21Q6YjLQJ9-9RrRxW3yp92BvtIqCzFXA=","duration_s":0.01064999899972463,"operation_name":"getFiles","operation_fingerprint":"getFiles/PLi0KzTEtAGiCx2G-KuCbPyg-JXcH08Mcb-IBFMb0gw=","is_mutation":false,"variables":"{\"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100, \"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\"}","query_string":"fragment PageInfo on PageInfo {\n  __typename\n  hasNextPage\n  hasPreviousPage\n  startCursor\n  endCursor\n}\n\nfragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getFiles(\n  $projectPath: ID!\n  $path: String\n  $ref: String!\n  $pageSize: Int!\n  $nextPageCursor: String\n) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      tree(path: $path, ref: $ref) {\n        __typename\n        trees(first: $pageSize, after: $nextPageCursor) {\n          __typename\n          edges {\n            __typename\n            node {\n              ...TreeEntry\n              webPath\n            }\n          }\n          pageInfo {\n            ...PageInfo\n          }\n        }\n        submodules(first: $pageSize, after: $nextPageCursor) {\n          __typename\n          edges {\n            __typename\n            node {\n              ...TreeEntry\n              webUrl\n              treeUrl\n            }\n          }\n          pageInfo {\n            ...PageInfo\n          }\n        }\n        blobs(first: $pageSize, after: $nextPageCursor) {\n          __typename\n          edges {\n            __typename\n            node {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n            }\n          }\n          pageInfo {\n            ...PageInfo\n          }\n        }\n      }\n    }\n  }\n}\n","meta.caller_id":"graphql:unknown","meta.remote_ip":"172.23.0.1","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.020274889000575058,"query_analysis.depth":7,"query_analysis.complexity":68,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","Tree.__typename","TreeEntryConnection.__typename","TreeEntryEdge.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntryEdge.node","TreeEntryConnection.edges","PageInfo.__typename","PageInfo.hasNextPage","PageInfo.hasPreviousPage","PageInfo.startCursor","PageInfo.endCursor","TreeEntryConnection.pageInfo","Tree.trees","SubmoduleConnection.__typename","SubmoduleEdge.__typename","Submodule.webUrl","Submodule.treeUrl","SubmoduleEdge.node","SubmoduleConnection.edges","SubmoduleConnection.pageInfo","Tree.submodules","BlobConnection.__typename","BlobEdge.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","BlobEdge.node","BlobConnection.edges","BlobConnection.pageInfo","Tree.blobs","Repository.tree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-02-23T07:59:15.475Z","correlation_id":"01GSYMH62PANX6F5CKPJVPTZK2","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/iW2iXm1LyOngsRspT5bI1gP0U6yii_BIhzQkzu1M964=","duration_s":0.0008901979999791365,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"172.23.0.1","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.020275723999475304,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-02-23T07:59:22.000Z","correlation_id":"01GSYMHCTG9SDYM7QCTBDNW9S7","trace_type":"execute_query","query_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=/4/jkGoeC7JLy1-jHX-5--Hj6EoFrItloZd1YOA5-e7_nU=","duration_s":0.0005795229999421281,"operation_name":"getBlobInfo","operation_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gitlab-instance-910fb108/cooz\", \"filePath\"=\u003e\"README.md\", \"ref\"=\u003e\"main\", \"shouldFetchRawText\"=\u003etrue}","query_string":"query getBlobInfo($projectPath: ID!, $filePath: String!, $ref: String!, $shouldFetchRawText: Boolean!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      empty\n      blobs(paths: [$filePath], ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          id\n          webPath\n          name\n          size\n          rawSize\n          rawTextBlob @include(if: $shouldFetchRawText)\n          fileType\n          language\n          path\n          blamePath\n          editBlobPath\n          gitpodBlobUrl\n          ideEditPath\n          forkAndEditPath\n          ideForkAndEditPath\n          codeNavigationPath\n          projectBlobPathRoot\n          forkAndViewPath\n          environmentFormattedExternalUrl\n          environmentExternalUrlForRouteMap\n          canModifyBlob\n          canCurrentUserPushToBranch\n          archived\n          storedExternally\n          externalStorage\n          externalStorageUrl\n          rawPath\n          replacePath\n          pipelineEditorPath\n          simpleViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n          richViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n        }\n      }\n    }\n  }\n}\n","meta.caller_id":"graphql:getBlobInfo","meta.remote_ip":"172.23.0.1","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","query_analysis.duration_s":0.0040310120002686745,"query_analysis.depth":6,"query_analysis.complexity":111,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","Repository.empty","RepositoryBlobConnection.__typename","RepositoryBlob.__typename","RepositoryBlob.id","RepositoryBlob.webPath","RepositoryBlob.name","RepositoryBlob.size","RepositoryBlob.rawSize","RepositoryBlob.rawTextBlob","RepositoryBlob.fileType","RepositoryBlob.language","RepositoryBlob.path","RepositoryBlob.blamePath","RepositoryBlob.editBlobPath","RepositoryBlob.gitpodBlobUrl","RepositoryBlob.ideEditPath","RepositoryBlob.forkAndEditPath","RepositoryBlob.ideForkAndEditPath","RepositoryBlob.codeNavigationPath","RepositoryBlob.projectBlobPathRoot","RepositoryBlob.forkAndViewPath","RepositoryBlob.environmentFormattedExternalUrl","RepositoryBlob.environmentExternalUrlForRouteMap","RepositoryBlob.canModifyBlob","RepositoryBlob.canCurrentUserPushToBranch","RepositoryBlob.archived","RepositoryBlob.storedExternally","RepositoryBlob.externalStorage","RepositoryBlob.externalStorageUrl","RepositoryBlob.rawPath","RepositoryBlob.replacePath","RepositoryBlob.pipelineEditorPath","BlobViewer.fileType","BlobViewer.tooLarge","BlobViewer.type","BlobViewer.renderError","BlobViewer.__typename","RepositoryBlob.simpleViewer","RepositoryBlob.richViewer","RepositoryBlobConnection.nodes","Repository.blobs","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
